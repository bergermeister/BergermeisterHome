<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_stop_watch_8cpp" kind="file" language="C++">
    <compoundname>StopWatch.cpp</compoundname>
    <includes refid="_common_2_source_2pch_8h" local="yes">pch.h</includes>
    <incdepgraph>
      <node id="224">
        <label>windows.h</label>
      </node>
      <node id="231">
        <label>Containers\ListNode.h</label>
        <link refid="_list_node_8h_source"/>
      </node>
      <node id="233">
        <label>Component\Listener.h</label>
        <link refid="_listener_8h_source"/>
      </node>
      <node id="223">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="221">
        <label>C:/Projects/BergermeisterHome/Common/Source/StopWatch.cpp</label>
        <link refid="_stop_watch_8cpp"/>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>Constants.h</label>
        <link refid="_constants_8h_source"/>
      </node>
      <node id="235">
        <label>Component\Model.h</label>
        <link refid="_model_8h_source"/>
      </node>
      <node id="222">
        <label>pch.h</label>
        <link refid="_common_2_source_2pch_8h_source"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>Types.h</label>
        <link refid="_types_8h"/>
      </node>
      <node id="229">
        <label>Containers\List.h</label>
        <link refid="_list_8h_source"/>
      </node>
      <node id="234">
        <label>Component\Event.h</label>
        <link refid="_event_8h_source"/>
      </node>
      <node id="230">
        <label>Containers\Queue.h</label>
        <link refid="_queue_8h_source"/>
      </node>
      <node id="227">
        <label>StopWatch.h</label>
        <link refid="_stop_watch_8h_source"/>
      </node>
      <node id="228">
        <label>Alert.h</label>
        <link refid="_alert_8h"/>
      </node>
      <node id="232">
        <label>Containers\LinkedList.h</label>
        <link refid="_linked_list_8h_source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;pch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_n_common" kindref="compound">GNCommon</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/>GTcStopWatch::vulFrequency<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">GTcStopWatch::GTcStopWatch<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/>LARGE_INTEGER<sp/>koQPF;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vulFrequency<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QueryPerformanceCounter(<sp/>&amp;koQPF<sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vulFrequency<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>koQPF.QuadPart<sp/>)<sp/>/<sp/>xulTimeBase;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>this-&gt;voStart.QuadPart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>this-&gt;voEnd.QuadPart<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>this-&gt;vbRunning<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">GTcStopWatch::GTcStopWatch(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_n_common_1_1_g_tc_stop_watch" kindref="compound">GTcStopWatch</ref>&amp;<sp/>aorStopWatch<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>aorStopWatch;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_g_n_common_1_1_g_tc_stop_watch" kindref="compound">GTcStopWatch</ref>&amp;<sp/>GTcStopWatch::operator=<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_n_common_1_1_g_tc_stop_watch" kindref="compound">GTcStopWatch</ref>&amp;<sp/>aorStopWatch<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>this-&gt;voStart<sp/><sp/><sp/>=<sp/>aorStopWatch.voStart;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>this-&gt;voEnd<sp/><sp/><sp/><sp/><sp/>=<sp/>aorStopWatch.voEnd;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/>this-&gt;vbRunning<sp/>=<sp/>aorStopWatch.vbRunning;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">GTcStopWatch::~GTcStopWatch<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>destruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GTcStopWatch::MStart(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>QueryPerformanceCounter(<sp/>&amp;this-&gt;voStart<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>this-&gt;vbRunning<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/>GTcStopWatch::MStop(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/>kulElapsed<sp/>=<sp/>this-&gt;MElapsed(<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>this-&gt;vbRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kulElapsed;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/>GTcStopWatch::MElapsed(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/>kulElapsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;vbRunning<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QueryPerformanceCounter(<sp/>&amp;this-&gt;voEnd<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;voStart.QuadPart<sp/>&gt;<sp/>this-&gt;voEnd.QuadPart<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kulElapsed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this-&gt;voEnd.QuadPart<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kulElapsed<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>xlMaxQuadPart<sp/>-<sp/>this-&gt;voStart.QuadPart<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kulElapsed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespace_g_n_common_1a01e8527dabf7ab4f123156b0701945eb" kindref="member">GTu64</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this-&gt;voEnd.QuadPart<sp/>-<sp/>this-&gt;voStart.QuadPart<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>kulElapsed<sp/>/=<sp/>vulFrequency;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kulElapsed;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Projects/BergermeisterHome/Common/Source/StopWatch.cpp"/>
  </compounddef>
</doxygen>
