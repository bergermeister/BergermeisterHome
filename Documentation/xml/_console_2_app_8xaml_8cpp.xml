<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_console_2_app_8xaml_8cpp" kind="file" language="C++">
    <compoundname>App.xaml.cpp</compoundname>
    <includes refid="_console_2pch_8h" local="yes">pch.h</includes>
    <includes refid="_console_2_main_page_8xaml_8h" local="yes">MainPage.xaml.h</includes>
    <incdepgraph>
      <node id="285">
        <label>strsafe.h</label>
      </node>
      <node id="281">
        <label>C:/Projects/BergermeisterHome/Console/App.xaml.cpp</label>
        <link refid="_console_2_app_8xaml_8cpp"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>MainPage.g.h</label>
      </node>
      <node id="282">
        <label>pch.h</label>
        <link refid="_console_2pch_8h_source"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>MainPage.xaml.h</label>
        <link refid="_console_2_main_page_8xaml_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>App.xaml.h</label>
        <link refid="_console_2_app_8xaml_8h_source"/>
        <childnode refid="287" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>App.g.h</label>
      </node>
      <node id="283">
        <label>collection.h</label>
      </node>
      <node id="284">
        <label>ppltasks.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_platform">Platform</innernamespace>
    <innernamespace refid="namespace_windows_1_1_application_model">Windows::ApplicationModel</innernamespace>
    <innernamespace refid="namespace_windows_1_1_application_model_1_1_activation">Windows::ApplicationModel::Activation</innernamespace>
    <innernamespace refid="namespace_windows_1_1_foundation">Windows::Foundation</innernamespace>
    <innernamespace refid="namespace_windows_1_1_foundation_1_1_collections">Windows::Foundation::Collections</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_controls_1_1_primitives">Windows::UI::Xaml::Controls::Primitives</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_data">Windows::UI::Xaml::Data</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_input">Windows::UI::Xaml::Input</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_interop">Windows::UI::Xaml::Interop</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_media">Windows::UI::Xaml::Media</innernamespace>
    <innernamespace refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_navigation">Windows::UI::Xaml::Navigation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>App.xaml.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>App<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MainPage.xaml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_console" kindref="compound">Console</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_platform" kindref="compound">Platform</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_application_model" kindref="compound">Windows::ApplicationModel</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_application_model_1_1_activation" kindref="compound">Windows::ApplicationModel::Activation</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_foundation" kindref="compound">Windows::Foundation</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_foundation_1_1_collections" kindref="compound">Windows::Foundation::Collections</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml" kindref="compound">Windows::UI::Xaml</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_controls" kindref="compound">Windows::UI::Xaml::Controls</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_controls_1_1_primitives" kindref="compound">Windows::UI::Xaml::Controls::Primitives</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_data" kindref="compound">Windows::UI::Xaml::Data</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_input" kindref="compound">Windows::UI::Xaml::Input</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_interop" kindref="compound">Windows::UI::Xaml::Interop</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_media" kindref="compound">Windows::UI::Xaml::Media</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_windows_1_1_u_i_1_1_xaml_1_1_navigation" kindref="compound">Windows::UI::Xaml::Navigation</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Windows::UI::Xaml::Navigation::NavigationFailedEventHandler;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Windows::ApplicationModel::Activation::LaunchActivatedEventArgs;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Windows::UI::Xaml::Navigation::NavigationFailedEventArgs;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">App::App()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeComponent();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Suspending<sp/>+=<sp/>ref<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SuspendingEventHandler<sp/>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;App::OnSuspending<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>App::OnLaunched<sp/>(<sp/>LaunchActivatedEventArgs^<sp/>aopArgs<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>graphics<sp/>profiling<sp/>information<sp/>while<sp/>debugging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsDebuggerPresent())</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>current<sp/>frame<sp/>rate<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugSettings-&gt;EnableFrameRateCounter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aopRootFrame<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>Frame^<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(<sp/>Window::Current-&gt;Content<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>repeat<sp/>app<sp/>initialization<sp/>when<sp/>the<sp/>Window<sp/>already<sp/>has<sp/>content,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>ensure<sp/>that<sp/>the<sp/>window<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopRootFrame<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Frame<sp/>to<sp/>act<sp/>as<sp/>the<sp/>navigation<sp/>context<sp/>and<sp/>associate<sp/>it<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>SuspensionManager<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aopRootFrame<sp/>=<sp/>ref<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Frame<sp/>(<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aopRootFrame-&gt;NavigationFailed<sp/>+=<sp/>ref<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NavigationFailedEventHandler<sp/>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;App::OnNavigationFailed<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopArgs-&gt;PreviousExecutionState<sp/>==<sp/>ApplicationExecutionState::Terminated<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Restore<sp/>the<sp/>saved<sp/>session<sp/>state<sp/>only<sp/>when<sp/>appropriate,<sp/>scheduling<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>final<sp/>launch<sp/>steps<sp/>after<sp/>the<sp/>restore<sp/>is<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopArgs-&gt;PrelaunchActivated<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopRootFrame-&gt;Content<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>navigation<sp/>stack<sp/>isn&apos;t<sp/>restored<sp/>navigate<sp/>to<sp/>the<sp/>first<sp/>page,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configuring<sp/>the<sp/>new<sp/>page<sp/>by<sp/>passing<sp/>required<sp/>information<sp/>as<sp/>a<sp/>navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aopRootFrame-&gt;Navigate<sp/>(<sp/>TypeName<sp/>(<sp/>MainPage::typeid<sp/>),<sp/>aopArgs-&gt;Arguments<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>frame<sp/>in<sp/>the<sp/>current<sp/>Window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window::Current-&gt;Content<sp/>=<sp/>aopRootFrame;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>current<sp/>window<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window::Current-&gt;Activate<sp/>(<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopArgs-&gt;PrelaunchActivated<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aopRootFrame-&gt;Content<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>navigation<sp/>stack<sp/>isn&apos;t<sp/>restored<sp/>navigate<sp/>to<sp/>the<sp/>first<sp/>page,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configuring<sp/>the<sp/>new<sp/>page<sp/>by<sp/>passing<sp/>required<sp/>information<sp/>as<sp/>a<sp/>navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aopRootFrame-&gt;Navigate<sp/>(<sp/>TypeName<sp/>(<sp/>MainPage::typeid<sp/>),<sp/>aopArgs-&gt;Arguments<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>current<sp/>window<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window::Current-&gt;Activate<sp/>(<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>App::OnSuspending<sp/>(<sp/>Object^<sp/>aopSender,<sp/>SuspendingEventArgs^<sp/>aopArgs<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)aopSender;<sp/><sp/></highlight><highlight class="comment">//<sp/>Unused<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)aopArgs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unused<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Save<sp/>application<sp/>state<sp/>and<sp/>stop<sp/>any<sp/>background<sp/>activity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>App::OnNavigationFailed<sp/>(<sp/>Platform::Object^<sp/>aopSender,<sp/>NavigationFailedEventArgs^<sp/>aopArgs<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FailureException<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>Page<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>aopArgs-&gt;SourcePageType.Name<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Projects/BergermeisterHome/Console/App.xaml.cpp"/>
  </compounddef>
</doxygen>
