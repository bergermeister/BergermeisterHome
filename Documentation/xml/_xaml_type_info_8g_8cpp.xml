<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_xaml_type_info_8g_8cpp" kind="file" language="C++">
    <compoundname>XamlTypeInfo.g.cpp</compoundname>
    <includes local="yes">pch.h</includes>
    <includes refid="_thermostat_2_generated_01_files_2_xaml_type_info_8g_8h" local="yes">XamlTypeInfo.g.h</includes>
    <includes local="yes">App.xaml.h</includes>
    <includes local="yes">MainPage.xaml.h</includes>
    <includes refid="_thermostat_2_generated_01_files_2_xaml_binding_info_8g_8hpp" local="yes">XamlBindingInfo.g.hpp</includes>
    <includes refid="_app_8g_8hpp" local="yes">App.g.hpp</includes>
    <includes refid="_main_page_8g_8hpp" local="yes">MainPage.g.hpp</includes>
    <incdepgraph>
      <node id="515">
        <label>MainPage.g.hpp</label>
        <link refid="_main_page_8g_8hpp_source"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>App.xaml.h</label>
      </node>
      <node id="514">
        <label>App.g.hpp</label>
        <link refid="_app_8g_8hpp_source"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>MainPage.xaml.h</label>
      </node>
      <node id="507">
        <label>C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp</label>
        <link refid="_xaml_type_info_8g_8cpp"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>XamlBindingInfo.g.hpp</label>
        <link refid="_thermostat_2_generated_01_files_2_xaml_binding_info_8g_8hpp_source"/>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>pch.h</label>
      </node>
      <node id="509">
        <label>XamlTypeInfo.g.h</label>
        <link refid="_thermostat_2_generated_01_files_2_xaml_type_info_8g_8h_source"/>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>collection.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_type_info" prot="public">TypeInfo</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_xaml_type_info_8g_8cpp_1aed6d383351ecc9cf2f9c3efcf55f5732" prot="public" static="no" mutable="no">
        <type><ref refid="struct_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo TypeInfos[]</definition>
        <argsstring>[]</argsstring>
        <name>TypeInfos</name>
        <initializer>= 
{
    
    L&quot;Thermostat.MainPage&quot;, L&quot;&quot;,
    &amp;ActivateType&lt;::<ref refid="class_thermostat_1_1_main_page" kindref="compound">Thermostat::MainPage</ref>&gt;, nullptr, nullptr, nullptr,
    1, 
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    
    L&quot;Windows.UI.Xaml.Controls.Page&quot;, L&quot;&quot;,
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    
    L&quot;Windows.UI.Xaml.Controls.UserControl&quot;, L&quot;&quot;,
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    
    L&quot;&quot;, L&quot;&quot;,
    nullptr, nullptr, nullptr, nullptr,
    -1, 
    0, 0,::Windows::UI::Xaml::Interop::TypeKind::Custom,
    false, false, false, false,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="60" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_xaml_type_info_8g_8cpp_1a22b14fc2a97e88034d108deb9a079e66" prot="public" static="no" mutable="no">
        <type>UINT</type>
        <definition>UINT TypeInfoLookup[]</definition>
        <argsstring>[]</argsstring>
        <name>TypeInfoLookup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="88" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_xaml_type_info_8g_8cpp_1a2c7e12ba604f2b04d86ab73930add039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>::Platform::Object ^</type>
        <definition>::Platform::Object ^ ActivateType</definition>
        <argsstring>()</argsstring>
        <name>ActivateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="19" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_xaml_type_info_8g_8cpp_1aef286181b7186123cf2133daa65da65f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TInstance</type>
          </param>
          <param>
            <type>typename TItem</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CollectionAdd</definition>
        <argsstring>(::Platform::Object^ instance, ::Platform::Object^ item)</argsstring>
        <name>CollectionAdd</name>
        <param>
          <type>::Platform::Object^</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>::Platform::Object^</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="25" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="_xaml_type_info_8g_8cpp_1ad5e74fc18a2ee194cbfd0c00c9f43e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TInstance</type>
          </param>
          <param>
            <type>typename TKey</type>
          </param>
          <param>
            <type>typename TItem</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DictionaryAdd</definition>
        <argsstring>(::Platform::Object^ instance, ::Platform::Object^ key, ::Platform::Object^ item)</argsstring>
        <name>DictionaryAdd</name>
        <param>
          <type>::Platform::Object^</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>::Platform::Object^</type>
          <declname>key</declname>
        </param>
        <param>
          <type>::Platform::Object^</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="31" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_xaml_type_info_8g_8cpp_1ab6040d2cf96ece561674eb3458d2906e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>::Platform::Object ^</type>
        <definition>::Platform::Object ^ FromStringConverter</definition>
        <argsstring>(::XamlTypeInfo::InfoProvider::XamlUserType^ userType, ::Platform::String^ input)</argsstring>
        <name>FromStringConverter</name>
        <param>
          <type>::<ref refid="class_xaml_type_info_1_1_info_provider_1_1_xaml_user_type" kindref="compound">XamlTypeInfo::InfoProvider::XamlUserType</ref>^</type>
          <declname>userType</declname>
        </param>
        <param>
          <type>::Platform::String^</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="37" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="_xaml_type_info_8g_8cpp_1a255333cad8413198c5682371fe65ba2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_type_info" kindref="compound">TypeInfo</ref> *</type>
        <definition>TypeInfo* GetTypeInfo</definition>
        <argsstring>(::Platform::String^ typeName)</argsstring>
        <name>GetTypeInfo</name>
        <param>
          <type>::Platform::String^</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" line="129" column="1" bodyfile="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp" bodystart="129" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;auto-generated&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>This<sp/>code<sp/>was<sp/>generated<sp/>by<sp/>a<sp/>tool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Changes<sp/>to<sp/>this<sp/>file<sp/>may<sp/>cause<sp/>incorrect<sp/>behavior<sp/>and<sp/>will<sp/>be<sp/>lost<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>code<sp/>is<sp/>regenerated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/auto-generated&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;XamlTypeInfo.g.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;App.xaml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MainPage.xaml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;XamlBindingInfo.g.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;App.g.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MainPage.g.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">::Platform::Object^<sp/>ActivateType()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TInstance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TItem&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CollectionAdd(::Platform::Object^<sp/>instance,<sp/>::Platform::Object^<sp/>item)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>safe_cast&lt;TInstance^&gt;(instance)-&gt;Append((TItem)item);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TInstance,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TKey,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TItem&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DictionaryAdd(::Platform::Object^<sp/>instance,<sp/>::Platform::Object^<sp/>key,<sp/>::Platform::Object^<sp/>item)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>safe_cast&lt;TInstance^&gt;(instance)-&gt;Insert((TKey)key,<sp/>(TItem)item);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">::Platform::Object^<sp/>FromStringConverter(::<ref refid="class_xaml_type_info_1_1_info_provider_1_1_xaml_user_type" kindref="compound">XamlTypeInfo::InfoProvider::XamlUserType</ref>^<sp/>userType,<sp/>::Platform::String^<sp/>input)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref<sp/>new<sp/>::Platform::Box&lt;T&gt;((T)userType-&gt;CreateEnumUIntFromString(input));</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_type_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_info" kindref="compound">TypeInfo</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>PCWSTR<sp/><sp/>typeName;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>PCWSTR<sp/>contentPropertyName;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>::Platform::Object^<sp/>(*activator)();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*collectionAdd)(::Platform::Object^,<sp/>::Platform::Object^);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*dictionaryAdd)(::Platform::Object^,<sp/>::Platform::Object^,<sp/>::Platform::Object^);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>::Platform::Object^<sp/>(*fromStringConverter)(<ref refid="class_xaml_type_info_1_1_info_provider_1_1_xaml_user_type" kindref="compound">::XamlTypeInfo::InfoProvider::XamlUserType</ref>^,<sp/>::Platform::String^);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>baseTypeIndex;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>firstMemberIndex;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>firstEnumValueIndex;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>::Windows::UI::Xaml::Interop::TypeKind<sp/>kindofType;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>isLocalType;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>isSystemType;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>isReturnTypeStub;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>isBindable;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="struct_type_info" kindref="compound">TypeInfo</ref><sp/>TypeInfos[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;Thermostat.MainPage&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;ActivateType&lt;::Thermostat::MainPage&gt;,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="comment">//<sp/>Windows.UI.Xaml.Controls.Page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>::Windows::UI::Xaml::Interop::TypeKind::Custom,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;Windows.UI.Xaml.Controls.Page&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>::Windows::UI::Xaml::Interop::TypeKind::Metadata,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;Windows.UI.Xaml.Controls.UserControl&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>::Windows::UI::Xaml::Interop::TypeKind::Metadata,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Last<sp/>type<sp/>here<sp/>is<sp/>for<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>0,::Windows::UI::Xaml::Interop::TypeKind::Custom,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">UINT<sp/>TypeInfoLookup[]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="struct_type_info" kindref="compound">TypeInfo</ref>*<sp/>GetTypeInfo(::Platform::String^<sp/>typeName)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeNameLength<sp/>=<sp/>typeName-&gt;Length();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeNameLength<sp/>&lt;<sp/>_countof(TypeInfoLookup)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UINT<sp/>i<sp/>=<sp/>TypeInfoLookup[typeNameLength];<sp/>i<sp/>&lt;<sp/>TypeInfoLookup[typeNameLength+1];<sp/>i++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeName<sp/>==<sp/>::Platform::StringReference(TypeInfos[i].typeName))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;TypeInfos[i];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">::Platform::Collections::Vector&lt;::Windows::UI::Xaml::Markup::IXamlMetadataProvider^&gt;^<sp/>::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::OtherProviders::get()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_otherProviders<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>otherProviders<sp/>=<sp/>ref<sp/>new<sp/>::Platform::Collections::Vector&lt;::Windows::UI::Xaml::Markup::IXamlMetadataProvider^&gt;();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_otherProviders<sp/>=<sp/>otherProviders;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_otherProviders;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">::Windows::UI::Xaml::Markup::IXamlType^<sp/>::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlType(::Platform::String^<sp/>typeName)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_type_info" kindref="compound">TypeInfo</ref>*<sp/>pTypeInfo<sp/>=<sp/>GetTypeInfo(typeName);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_type_info" kindref="compound">TypeInfo</ref>*<sp/>pNextTypeInfo<sp/>=<sp/>pTypeInfo<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTypeInfo<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>pNextTypeInfo<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTypeInfo-&gt;isSystemType)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref<sp/>new<sp/>::XamlTypeInfo::InfoProvider::XamlSystemBaseType(typeName);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xaml_type_info_1_1_info_provider_1_1_xaml_user_type" kindref="compound">::XamlTypeInfo::InfoProvider::XamlUserType</ref>^<sp/>userType<sp/>=<sp/>ref<sp/>new<sp/>::XamlTypeInfo::InfoProvider::XamlUserType(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Platform::StringReference(pTypeInfo-&gt;typeName),<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;GetXamlTypeByName(::Platform::StringReference(pTypeInfo-&gt;baseTypeIndex<sp/>&gt;=<sp/>0<sp/>?<sp/>TypeInfos[pTypeInfo-&gt;baseTypeIndex].typeName<sp/>:<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;KindOfType<sp/>=<sp/>pTypeInfo-&gt;kindofType;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;Activator<sp/>=<sp/>pTypeInfo-&gt;activator;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;CollectionAdd<sp/>=<sp/>pTypeInfo-&gt;collectionAdd;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;DictionaryAdd<sp/>=<sp/>pTypeInfo-&gt;dictionaryAdd;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;FromStringConverter<sp/>=<sp/>pTypeInfo-&gt;fromStringConverter;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;ContentPropertyName<sp/>=<sp/>::Platform::StringReference(pTypeInfo-&gt;contentPropertyName);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;IsLocalType<sp/>=<sp/>pTypeInfo-&gt;isLocalType;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;IsReturnTypeStub<sp/>=<sp/>pTypeInfo-&gt;isReturnTypeStub;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userType-&gt;IsBindable<sp/>=<sp/>pTypeInfo-&gt;isBindable;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userType;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">::Windows::UI::Xaml::Markup::IXamlMember^<sp/>::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlMember(::Platform::String^<sp/>longMemberName)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xaml_type_info_1_1_info_provider_1_1_xaml_member" kindref="compound">::XamlTypeInfo::InfoProvider::XamlMember</ref>^<sp/>xamlMember<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Local<sp/>Properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)longMemberName;<sp/></highlight><highlight class="comment">//<sp/>Unused<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xamlMember;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Projects/BergermeisterHome/Thermostat/Generated Files/XamlTypeInfo.g.cpp"/>
  </compounddef>
</doxygen>
